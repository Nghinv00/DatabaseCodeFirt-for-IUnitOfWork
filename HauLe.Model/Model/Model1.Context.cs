//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HauLe.Model.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HauLeEntities : DbContext
    {
        public HauLeEntities()
            : base("name=HauLeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Advertise> Advertises { get; set; }
        public virtual DbSet<Brand> Brands { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Chitiethinh> Chitiethinhs { get; set; }
        public virtual DbSet<Color> Colors { get; set; }
        public virtual DbSet<CommentProduc> CommentProducs { get; set; }
        public virtual DbSet<Company> Companies { get; set; }
        public virtual DbSet<Config> Configs { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<CTdonhang> CTdonhangs { get; set; }
        public virtual DbSet<Document> Documents { get; set; }
        public virtual DbSet<DocumentType> DocumentTypes { get; set; }
        public virtual DbSet<Donhang> Donhangs { get; set; }
        public virtual DbSet<EmailRegister> EmailRegisters { get; set; }
        public virtual DbSet<GroupLibrary> GroupLibraries { get; set; }
        public virtual DbSet<GroupMember> GroupMembers { get; set; }
        public virtual DbSet<GroupMenuSanPham> GroupMenuSanPhams { get; set; }
        public virtual DbSet<GroupNew> GroupNews { get; set; }
        public virtual DbSet<GroupSupport> GroupSupports { get; set; }
        public virtual DbSet<Html> Htmls { get; set; }
        public virtual DbSet<information> information { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<Library> Libraries { get; set; }
        public virtual DbSet<Link> Links { get; set; }
        public virtual DbSet<mautuychon> mautuychons { get; set; }
        public virtual DbSet<Member> Members { get; set; }
        public virtual DbSet<NewMenuSanPham> NewMenuSanPhams { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Pageproduct> Pageproducts { get; set; }
        public virtual DbSet<ProColor> ProColors { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProSize> ProSizes { get; set; }
        public virtual DbSet<Province> Provinces { get; set; }
        public virtual DbSet<quantity_purchased> quantity_purchased { get; set; }
        public virtual DbSet<service_charge> service_charge { get; set; }
        public virtual DbSet<Shop> Shops { get; set; }
        public virtual DbSet<Size> Sizes { get; set; }
        public virtual DbSet<SlideShow> SlideShows { get; set; }
        public virtual DbSet<Support> Supports { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TB_ThongKe> TB_ThongKe { get; set; }
        public virtual DbSet<tbBill_customers> tbBill_customers { get; set; }
        public virtual DbSet<tbBilldetail> tbBilldetails { get; set; }
        public virtual DbSet<tbCUSTOMER> tbCUSTOMERS { get; set; }
        public virtual DbSet<tblDonvi> tblDonvis { get; set; }
        public virtual DbSet<tblKhoanggia> tblKhoanggias { get; set; }
        public virtual DbSet<tblKichthuoc> tblKichthuocs { get; set; }
        public virtual DbSet<tblMausac> tblMausacs { get; set; }
        public virtual DbSet<tblThuonghieu> tblThuonghieux { get; set; }
        public virtual DbSet<tbRecipient> tbRecipients { get; set; }
        public virtual DbSet<Thanhvien> Thanhviens { get; set; }
        public virtual DbSet<Url_thanhtoan> Url_thanhtoan { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
    
        public virtual ObjectResult<Asp_Excell_GetBy_100DHMoiNhat_Result> Asp_Excell_GetBy_100DHMoiNhat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asp_Excell_GetBy_100DHMoiNhat_Result>("Asp_Excell_GetBy_100DHMoiNhat");
        }
    
        public virtual ObjectResult<Asp_Excell_GetBy_10DHMoiNhat_Result> Asp_Excell_GetBy_10DHMoiNhat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asp_Excell_GetBy_10DHMoiNhat_Result>("Asp_Excell_GetBy_10DHMoiNhat");
        }
    
        public virtual ObjectResult<Asp_Excell_GetBy_50DHMoiNhat_Result> Asp_Excell_GetBy_50DHMoiNhat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asp_Excell_GetBy_50DHMoiNhat_Result>("Asp_Excell_GetBy_50DHMoiNhat");
        }
    
        public virtual ObjectResult<Asp_Excell_GetBy_5DHMoiNhat_Result> Asp_Excell_GetBy_5DHMoiNhat()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asp_Excell_GetBy_5DHMoiNhat_Result>("Asp_Excell_GetBy_5DHMoiNhat");
        }
    
        public virtual ObjectResult<Asp_Excell_GetBy_Chuaduyet_Result> Asp_Excell_GetBy_Chuaduyet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asp_Excell_GetBy_Chuaduyet_Result>("Asp_Excell_GetBy_Chuaduyet");
        }
    
        public virtual ObjectResult<Asp_Excell_GetBy_duyet_Result> Asp_Excell_GetBy_duyet()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asp_Excell_GetBy_duyet_Result>("Asp_Excell_GetBy_duyet");
        }
    
        public virtual ObjectResult<Asp_Excell_GetBy_Today_Result> Asp_Excell_GetBy_Today()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asp_Excell_GetBy_Today_Result>("Asp_Excell_GetBy_Today");
        }
    
        public virtual ObjectResult<Asp_Excell_GetByAll_Result> Asp_Excell_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Asp_Excell_GetByAll_Result>("Asp_Excell_GetByAll");
        }
    
        public virtual ObjectResult<Nullable<int>> Donhang_Max()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Donhang_Max");
        }
    
        public virtual ObjectResult<Nullable<int>> Sanpham_Max()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Sanpham_Max");
        }
    
        public virtual int sp_Advertise_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Advertise_GetByAll_Result> sp_Advertise_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_GetByAll_Result>("sp_Advertise_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Advertise_GetById_Result> sp_Advertise_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_GetById_Result>("sp_Advertise_GetById", idParameter);
        }
    
        public virtual int sp_Advertise_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Advertise_Insert(string name, string image, Nullable<int> width, Nullable<int> height, string link, string target, string content, Nullable<short> position, Nullable<int> pageId, Nullable<int> click, Nullable<int> ord, Nullable<bool> active, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(short));
    
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Insert", nameParameter, imageParameter, widthParameter, heightParameter, linkParameter, targetParameter, contentParameter, positionParameter, pageIdParameter, clickParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_Advertise_Paging_Result> sp_Advertise_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_Paging_Result>("sp_Advertise_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Advertise_Update(Nullable<int> id, string name, string image, Nullable<int> width, Nullable<int> height, string link, string target, string content, Nullable<short> position, Nullable<int> pageId, Nullable<int> click, Nullable<int> ord, Nullable<bool> active, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(short));
    
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Update", idParameter, nameParameter, imageParameter, widthParameter, heightParameter, linkParameter, targetParameter, contentParameter, positionParameter, pageIdParameter, clickParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_Brands_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Brands_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Brands_GetByAll_Result> sp_Brands_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Brands_GetByAll_Result>("sp_Brands_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Brands_GetById_Result> sp_Brands_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Brands_GetById_Result>("sp_Brands_GetById", idParameter);
        }
    
        public virtual int sp_Brands_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Brands_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Brands_Insert(string name, string logo, Nullable<int> ord, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Brands_Insert", nameParameter, logoParameter, ordParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_Brands_Paging_Result> sp_Brands_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Brands_Paging_Result>("sp_Brands_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Brands_Update(Nullable<int> id, string name, string logo, Nullable<int> ord, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var logoParameter = logo != null ?
                new ObjectParameter("Logo", logo) :
                new ObjectParameter("Logo", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Brands_Update", idParameter, nameParameter, logoParameter, ordParameter, langParameter);
        }
    
        public virtual int sp_Category_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Category_GetByAll_Result> sp_Category_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_GetByAll_Result>("sp_Category_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Category_GetByCategory_Result> sp_Category_GetByCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_GetByCategory_Result>("sp_Category_GetByCategory");
        }
    
        public virtual ObjectResult<sp_Category_GetById_Result> sp_Category_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_GetById_Result>("sp_Category_GetById", idParameter);
        }
    
        public virtual ObjectResult<sp_Category_GetByLevel_Result> sp_Category_GetByLevel(string level, string lang, Nullable<int> levelLength)
        {
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var levelLengthParameter = levelLength.HasValue ?
                new ObjectParameter("LevelLength", levelLength) :
                new ObjectParameter("LevelLength", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_GetByLevel_Result>("sp_Category_GetByLevel", levelParameter, langParameter, levelLengthParameter);
        }
    
        public virtual int sp_Category_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Category_Insert(string tag, string name, string content, string level, Nullable<short> priority, Nullable<short> index, string image, string title, string description, string keyword, Nullable<int> active, Nullable<int> ord, string lang, string image2)
        {
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(short));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(short));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var image2Parameter = image2 != null ?
                new ObjectParameter("Image2", image2) :
                new ObjectParameter("Image2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Insert", tagParameter, nameParameter, contentParameter, levelParameter, priorityParameter, indexParameter, imageParameter, titleParameter, descriptionParameter, keywordParameter, activeParameter, ordParameter, langParameter, image2Parameter);
        }
    
        public virtual ObjectResult<sp_Category_Paging_Result> sp_Category_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Category_Paging_Result>("sp_Category_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Category_Update(Nullable<int> id, string tag, string name, string content, string level, Nullable<short> priority, Nullable<short> index, string image, string title, string description, string keyword, Nullable<int> active, Nullable<int> ord, string lang, string image2)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(short));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(short));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var image2Parameter = image2 != null ?
                new ObjectParameter("Image2", image2) :
                new ObjectParameter("Image2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Update", idParameter, tagParameter, nameParameter, contentParameter, levelParameter, priorityParameter, indexParameter, imageParameter, titleParameter, descriptionParameter, keywordParameter, activeParameter, ordParameter, langParameter, image2Parameter);
        }
    
        public virtual int sp_Category_Update_Ord(Nullable<int> id, Nullable<int> ord)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Category_Update_Ord", idParameter, ordParameter);
        }
    
        public virtual int sp_Colors_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Colors_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Colors_GetByAll_Result> sp_Colors_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Colors_GetByAll_Result>("sp_Colors_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Colors_GetById_Result> sp_Colors_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Colors_GetById_Result>("sp_Colors_GetById", idParameter);
        }
    
        public virtual int sp_Colors_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Colors_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Colors_Insert(string name, string img, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("Img", img) :
                new ObjectParameter("Img", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Colors_Insert", nameParameter, imgParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_Colors_Paging_Result> sp_Colors_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Colors_Paging_Result>("sp_Colors_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Colors_Update(Nullable<int> id, string name, string img, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("Img", img) :
                new ObjectParameter("Img", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Colors_Update", idParameter, nameParameter, imgParameter, langParameter);
        }
    
        public virtual int sp_CommentProduc_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CommentProduc_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_CommentProduc_GetByAll_Result> sp_CommentProduc_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CommentProduc_GetByAll_Result>("sp_CommentProduc_GetByAll");
        }
    
        public virtual ObjectResult<sp_CommentProduc_GetById_Result> sp_CommentProduc_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CommentProduc_GetById_Result>("sp_CommentProduc_GetById", idParameter);
        }
    
        public virtual int sp_CommentProduc_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CommentProduc_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_CommentProduc_Insert(Nullable<int> proId, string name, string email, Nullable<int> point, string content, Nullable<System.DateTime> date)
        {
            var proIdParameter = proId.HasValue ?
                new ObjectParameter("ProId", proId) :
                new ObjectParameter("ProId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var pointParameter = point.HasValue ?
                new ObjectParameter("Point", point) :
                new ObjectParameter("Point", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CommentProduc_Insert", proIdParameter, nameParameter, emailParameter, pointParameter, contentParameter, dateParameter);
        }
    
        public virtual ObjectResult<sp_CommentProduc_Paging_Result> sp_CommentProduc_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CommentProduc_Paging_Result>("sp_CommentProduc_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_CommentProduc_Update(Nullable<int> id, Nullable<int> proId, string name, string email, Nullable<int> point, string content, Nullable<System.DateTime> date, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var proIdParameter = proId.HasValue ?
                new ObjectParameter("ProId", proId) :
                new ObjectParameter("ProId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var pointParameter = point.HasValue ?
                new ObjectParameter("Point", point) :
                new ObjectParameter("Point", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CommentProduc_Update", idParameter, proIdParameter, nameParameter, emailParameter, pointParameter, contentParameter, dateParameter, activeParameter);
        }
    
        public virtual int sp_Company_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Company_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Company_GetByAll_Result> sp_Company_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Company_GetByAll_Result>("sp_Company_GetByAll");
        }
    
        public virtual ObjectResult<sp_Company_GetById_Result> sp_Company_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Company_GetById_Result>("sp_Company_GetById", idParameter);
        }
    
        public virtual int sp_Company_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Company_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Company_Insert(string name, string address, string phoneNumber, string fax, Nullable<int> provinceId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Company_Insert", nameParameter, addressParameter, phoneNumberParameter, faxParameter, provinceIdParameter);
        }
    
        public virtual ObjectResult<sp_Company_Paging_Result> sp_Company_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Company_Paging_Result>("sp_Company_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Company_Update(Nullable<int> id, string name, string address, string phoneNumber, string fax, Nullable<int> provinceId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var provinceIdParameter = provinceId.HasValue ?
                new ObjectParameter("ProvinceId", provinceId) :
                new ObjectParameter("ProvinceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Company_Update", idParameter, nameParameter, addressParameter, phoneNumberParameter, faxParameter, provinceIdParameter);
        }
    
        public virtual int sp_Config_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Config_GetByAll_Result> sp_Config_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_GetByAll_Result>("sp_Config_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Config_GetById_Result> sp_Config_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_GetById_Result>("sp_Config_GetById", idParameter);
        }
    
        public virtual int sp_Config_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Config_Insert(string mail_Smtp, Nullable<short> mail_Port, string mail_Info, string mail_Noreply, string mail_Password, string placeHead, string placeBody, string googleId, string contact, string deliveryTerms, string paymentTerms, Nullable<double> freeShipping, string copyright, string title, string description, string keyword, string lang, string helpsize, Nullable<int> location)
        {
            var mail_SmtpParameter = mail_Smtp != null ?
                new ObjectParameter("Mail_Smtp", mail_Smtp) :
                new ObjectParameter("Mail_Smtp", typeof(string));
    
            var mail_PortParameter = mail_Port.HasValue ?
                new ObjectParameter("Mail_Port", mail_Port) :
                new ObjectParameter("Mail_Port", typeof(short));
    
            var mail_InfoParameter = mail_Info != null ?
                new ObjectParameter("Mail_Info", mail_Info) :
                new ObjectParameter("Mail_Info", typeof(string));
    
            var mail_NoreplyParameter = mail_Noreply != null ?
                new ObjectParameter("Mail_Noreply", mail_Noreply) :
                new ObjectParameter("Mail_Noreply", typeof(string));
    
            var mail_PasswordParameter = mail_Password != null ?
                new ObjectParameter("Mail_Password", mail_Password) :
                new ObjectParameter("Mail_Password", typeof(string));
    
            var placeHeadParameter = placeHead != null ?
                new ObjectParameter("PlaceHead", placeHead) :
                new ObjectParameter("PlaceHead", typeof(string));
    
            var placeBodyParameter = placeBody != null ?
                new ObjectParameter("PlaceBody", placeBody) :
                new ObjectParameter("PlaceBody", typeof(string));
    
            var googleIdParameter = googleId != null ?
                new ObjectParameter("GoogleId", googleId) :
                new ObjectParameter("GoogleId", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var deliveryTermsParameter = deliveryTerms != null ?
                new ObjectParameter("DeliveryTerms", deliveryTerms) :
                new ObjectParameter("DeliveryTerms", typeof(string));
    
            var paymentTermsParameter = paymentTerms != null ?
                new ObjectParameter("PaymentTerms", paymentTerms) :
                new ObjectParameter("PaymentTerms", typeof(string));
    
            var freeShippingParameter = freeShipping.HasValue ?
                new ObjectParameter("FreeShipping", freeShipping) :
                new ObjectParameter("FreeShipping", typeof(double));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var helpsizeParameter = helpsize != null ?
                new ObjectParameter("Helpsize", helpsize) :
                new ObjectParameter("Helpsize", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Insert", mail_SmtpParameter, mail_PortParameter, mail_InfoParameter, mail_NoreplyParameter, mail_PasswordParameter, placeHeadParameter, placeBodyParameter, googleIdParameter, contactParameter, deliveryTermsParameter, paymentTermsParameter, freeShippingParameter, copyrightParameter, titleParameter, descriptionParameter, keywordParameter, langParameter, helpsizeParameter, locationParameter);
        }
    
        public virtual ObjectResult<sp_Config_Paging_Result> sp_Config_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_Paging_Result>("sp_Config_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Config_Update(Nullable<int> id, string mail_Smtp, Nullable<short> mail_Port, string mail_Info, string mail_Noreply, string mail_Password, string placeHead, string placeBody, string googleId, string contact, string deliveryTerms, string paymentTerms, Nullable<double> freeShipping, string copyright, string title, string description, string keyword, string lang, string helpsize, Nullable<int> location)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var mail_SmtpParameter = mail_Smtp != null ?
                new ObjectParameter("Mail_Smtp", mail_Smtp) :
                new ObjectParameter("Mail_Smtp", typeof(string));
    
            var mail_PortParameter = mail_Port.HasValue ?
                new ObjectParameter("Mail_Port", mail_Port) :
                new ObjectParameter("Mail_Port", typeof(short));
    
            var mail_InfoParameter = mail_Info != null ?
                new ObjectParameter("Mail_Info", mail_Info) :
                new ObjectParameter("Mail_Info", typeof(string));
    
            var mail_NoreplyParameter = mail_Noreply != null ?
                new ObjectParameter("Mail_Noreply", mail_Noreply) :
                new ObjectParameter("Mail_Noreply", typeof(string));
    
            var mail_PasswordParameter = mail_Password != null ?
                new ObjectParameter("Mail_Password", mail_Password) :
                new ObjectParameter("Mail_Password", typeof(string));
    
            var placeHeadParameter = placeHead != null ?
                new ObjectParameter("PlaceHead", placeHead) :
                new ObjectParameter("PlaceHead", typeof(string));
    
            var placeBodyParameter = placeBody != null ?
                new ObjectParameter("PlaceBody", placeBody) :
                new ObjectParameter("PlaceBody", typeof(string));
    
            var googleIdParameter = googleId != null ?
                new ObjectParameter("GoogleId", googleId) :
                new ObjectParameter("GoogleId", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var deliveryTermsParameter = deliveryTerms != null ?
                new ObjectParameter("DeliveryTerms", deliveryTerms) :
                new ObjectParameter("DeliveryTerms", typeof(string));
    
            var paymentTermsParameter = paymentTerms != null ?
                new ObjectParameter("PaymentTerms", paymentTerms) :
                new ObjectParameter("PaymentTerms", typeof(string));
    
            var freeShippingParameter = freeShipping.HasValue ?
                new ObjectParameter("FreeShipping", freeShipping) :
                new ObjectParameter("FreeShipping", typeof(double));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var helpsizeParameter = helpsize != null ?
                new ObjectParameter("Helpsize", helpsize) :
                new ObjectParameter("Helpsize", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Update", idParameter, mail_SmtpParameter, mail_PortParameter, mail_InfoParameter, mail_NoreplyParameter, mail_PasswordParameter, placeHeadParameter, placeBodyParameter, googleIdParameter, contactParameter, deliveryTermsParameter, paymentTermsParameter, freeShippingParameter, copyrightParameter, titleParameter, descriptionParameter, keywordParameter, langParameter, helpsizeParameter, locationParameter);
        }
    
        public virtual int sp_Contact_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Contact_GetByAll_Result> sp_Contact_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_GetByAll_Result>("sp_Contact_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Contact_GetById_Result> sp_Contact_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_GetById_Result>("sp_Contact_GetById", idParameter);
        }
    
        public virtual int sp_Contact_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Contact_Insert(string name, string company, string address, string tel, string mail, string detail, Nullable<System.DateTime> date, Nullable<int> active, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Insert", nameParameter, companyParameter, addressParameter, telParameter, mailParameter, detailParameter, dateParameter, activeParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_Contact_Paging_Result> sp_Contact_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_Paging_Result>("sp_Contact_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Contact_Update(Nullable<int> id, string name, string company, string address, string tel, string mail, string detail, Nullable<System.DateTime> date, Nullable<int> active, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var mailParameter = mail != null ?
                new ObjectParameter("Mail", mail) :
                new ObjectParameter("Mail", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Update", idParameter, nameParameter, companyParameter, addressParameter, telParameter, mailParameter, detailParameter, dateParameter, activeParameter, langParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_data_backup()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_data_backup");
        }
    
        public virtual int sp_Document_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Document_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Document_GetByAll_Result> sp_Document_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Document_GetByAll_Result>("sp_Document_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Document_GetById_Result> sp_Document_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Document_GetById_Result>("sp_Document_GetById", idParameter);
        }
    
        public virtual int sp_Document_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Document_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Document_Insert(string code, string name, Nullable<System.DateTime> createDate, Nullable<System.DateTime> effectiveDate, string info, string file, Nullable<int> priority, Nullable<int> active, Nullable<int> typeId, Nullable<int> memberId, string lang)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Document_Insert", codeParameter, nameParameter, createDateParameter, effectiveDateParameter, infoParameter, fileParameter, priorityParameter, activeParameter, typeIdParameter, memberIdParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_Document_Paging_Result> sp_Document_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Document_Paging_Result>("sp_Document_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Document_Update(Nullable<int> id, string code, string name, Nullable<System.DateTime> createDate, Nullable<System.DateTime> effectiveDate, string info, string file, Nullable<int> priority, Nullable<int> active, Nullable<int> typeId, Nullable<int> memberId, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("TypeId", typeId) :
                new ObjectParameter("TypeId", typeof(int));
    
            var memberIdParameter = memberId.HasValue ?
                new ObjectParameter("MemberId", memberId) :
                new ObjectParameter("MemberId", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Document_Update", idParameter, codeParameter, nameParameter, createDateParameter, effectiveDateParameter, infoParameter, fileParameter, priorityParameter, activeParameter, typeIdParameter, memberIdParameter, langParameter);
        }
    
        public virtual int sp_DocumentType_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DocumentType_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_DocumentType_GetByAll_Result> sp_DocumentType_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DocumentType_GetByAll_Result>("sp_DocumentType_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_DocumentType_GetById_Result> sp_DocumentType_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_DocumentType_GetById_Result>("sp_DocumentType_GetById", idParameter);
        }
    
        public virtual int sp_DocumentType_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DocumentType_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_DocumentType_Insert(string name, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DocumentType_Insert", nameParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual int sp_DocumentType_Update(Nullable<int> id, string name, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DocumentType_Update", idParameter, nameParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_EmailRegisters_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmailRegisters_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_EmailRegisters_GetByAll_Result> sp_EmailRegisters_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmailRegisters_GetByAll_Result>("sp_EmailRegisters_GetByAll");
        }
    
        public virtual ObjectResult<sp_EmailRegisters_GetById_Result> sp_EmailRegisters_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmailRegisters_GetById_Result>("sp_EmailRegisters_GetById", idParameter);
        }
    
        public virtual int sp_EmailRegisters_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmailRegisters_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_EmailRegisters_Insert(string email, Nullable<System.DateTime> createdate, Nullable<int> status)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var createdateParameter = createdate.HasValue ?
                new ObjectParameter("Createdate", createdate) :
                new ObjectParameter("Createdate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmailRegisters_Insert", emailParameter, createdateParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_EmailRegisters_Paging_Result> sp_EmailRegisters_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_EmailRegisters_Paging_Result>("sp_EmailRegisters_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_EmailRegisters_Update(Nullable<int> id, string email, Nullable<System.DateTime> createdate, Nullable<int> status)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var createdateParameter = createdate.HasValue ?
                new ObjectParameter("Createdate", createdate) :
                new ObjectParameter("Createdate", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EmailRegisters_Update", idParameter, emailParameter, createdateParameter, statusParameter);
        }
    
        public virtual int sp_GroupLibrary_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupLibrary_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupLibrary_GetByAll_Result> sp_GroupLibrary_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupLibrary_GetByAll_Result>("sp_GroupLibrary_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_GroupLibrary_GetById_Result> sp_GroupLibrary_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupLibrary_GetById_Result>("sp_GroupLibrary_GetById", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupLibrary_GetByLevel_Result> sp_GroupLibrary_GetByLevel(string level, string lang, Nullable<int> levelLength)
        {
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var levelLengthParameter = levelLength.HasValue ?
                new ObjectParameter("LevelLength", levelLength) :
                new ObjectParameter("LevelLength", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupLibrary_GetByLevel_Result>("sp_GroupLibrary_GetByLevel", levelParameter, langParameter, levelLengthParameter);
        }
    
        public virtual int sp_GroupLibrary_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupLibrary_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupLibrary_Insert(string name, string tag, string level, string image, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupLibrary_Insert", nameParameter, tagParameter, levelParameter, imageParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_GroupLibrary_Paging_Result> sp_GroupLibrary_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupLibrary_Paging_Result>("sp_GroupLibrary_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_GroupLibrary_Update(Nullable<int> id, string name, string tag, string level, string image, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupLibrary_Update", idParameter, nameParameter, tagParameter, levelParameter, imageParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual int sp_GroupMember_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupMember_GetByAll_Result> sp_GroupMember_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupMember_GetByAll_Result>("sp_GroupMember_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupMember_GetById_Result> sp_GroupMember_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupMember_GetById_Result>("sp_GroupMember_GetById", idParameter);
        }
    
        public virtual int sp_GroupMember_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupMember_Insert(string name, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_Insert", nameParameter, activeParameter);
        }
    
        public virtual int sp_GroupMember_Update(Nullable<int> id, string name, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupMember_Update", idParameter, nameParameter, activeParameter);
        }
    
        public virtual int sp_GroupNews_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_GetByAll_Result> sp_GroupNews_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetByAll_Result>("sp_GroupNews_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_GetById_Result> sp_GroupNews_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetById_Result>("sp_GroupNews_GetById", idParameter);
        }
    
        public virtual int sp_GroupNews_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupNews_Insert(string name, string tag, string level, string title, string description, string keyword, Nullable<int> priority, Nullable<int> index, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Insert", nameParameter, tagParameter, levelParameter, titleParameter, descriptionParameter, keywordParameter, priorityParameter, indexParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_Paging_Result> sp_GroupNews_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_Paging_Result>("sp_GroupNews_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_GroupNews_Update(Nullable<int> id, string name, string tag, string level, string title, string description, string keyword, Nullable<int> priority, Nullable<int> index, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Update", idParameter, nameParameter, tagParameter, levelParameter, titleParameter, descriptionParameter, keywordParameter, priorityParameter, indexParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual int sp_GroupSupport_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupSupport_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupSupport_GetByAll_Result> sp_GroupSupport_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupSupport_GetByAll_Result>("sp_GroupSupport_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_GroupSupport_GetById_Result> sp_GroupSupport_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupSupport_GetById_Result>("sp_GroupSupport_GetById", idParameter);
        }
    
        public virtual int sp_GroupSupport_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupSupport_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupSupport_Insert(string name, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupSupport_Insert", nameParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_GroupSupport_Paging_Result> sp_GroupSupport_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupSupport_Paging_Result>("sp_GroupSupport_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_GroupSupport_Update(Nullable<int> id, string name, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupSupport_Update", idParameter, nameParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_Language_Delete(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Language_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Language_GetByAll_Result> sp_Language_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Language_GetByAll_Result>("sp_Language_GetByAll");
        }
    
        public virtual ObjectResult<sp_Language_GetById_Result> sp_Language_GetById(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Language_GetById_Result>("sp_Language_GetById", idParameter);
        }
    
        public virtual int sp_Language_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Language_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Language_Insert(string id, string name, string folder, Nullable<bool> @default, string image, Nullable<bool> active)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var folderParameter = folder != null ?
                new ObjectParameter("Folder", folder) :
                new ObjectParameter("Folder", typeof(string));
    
            var defaultParameter = @default.HasValue ?
                new ObjectParameter("Default", @default) :
                new ObjectParameter("Default", typeof(bool));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Language_Insert", idParameter, nameParameter, folderParameter, defaultParameter, imageParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_Language_Paging_Result> sp_Language_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Language_Paging_Result>("sp_Language_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Language_Update(string id, string name, string folder, Nullable<bool> @default, string image, Nullable<bool> active)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var folderParameter = folder != null ?
                new ObjectParameter("Folder", folder) :
                new ObjectParameter("Folder", typeof(string));
    
            var defaultParameter = @default.HasValue ?
                new ObjectParameter("Default", @default) :
                new ObjectParameter("Default", typeof(bool));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Language_Update", idParameter, nameParameter, folderParameter, defaultParameter, imageParameter, activeParameter);
        }
    
        public virtual int sp_Library_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Library_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Library_GetByAll_Result> sp_Library_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Library_GetByAll_Result>("sp_Library_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Library_GetById_Result> sp_Library_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Library_GetById_Result>("sp_Library_GetById", idParameter);
        }
    
        public virtual int sp_Library_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Library_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Library_Insert(string name, string tag, string image, string file, string info, Nullable<int> priority, Nullable<int> active, Nullable<int> groupLibraryId, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var groupLibraryIdParameter = groupLibraryId.HasValue ?
                new ObjectParameter("GroupLibraryId", groupLibraryId) :
                new ObjectParameter("GroupLibraryId", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Library_Insert", nameParameter, tagParameter, imageParameter, fileParameter, infoParameter, priorityParameter, activeParameter, groupLibraryIdParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_Library_Paging_Result> sp_Library_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Library_Paging_Result>("sp_Library_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Library_Update(Nullable<int> id, string name, string tag, string image, string file, string info, Nullable<int> priority, Nullable<int> active, Nullable<int> groupLibraryId, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(string));
    
            var infoParameter = info != null ?
                new ObjectParameter("Info", info) :
                new ObjectParameter("Info", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var groupLibraryIdParameter = groupLibraryId.HasValue ?
                new ObjectParameter("GroupLibraryId", groupLibraryId) :
                new ObjectParameter("GroupLibraryId", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Library_Update", idParameter, nameParameter, tagParameter, imageParameter, fileParameter, infoParameter, priorityParameter, activeParameter, groupLibraryIdParameter, langParameter);
        }
    
        public virtual int sp_Link_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Link_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Link_GetByAll_Result> sp_Link_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Link_GetByAll_Result>("sp_Link_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Link_GetById_Result> sp_Link_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Link_GetById_Result>("sp_Link_GetById", idParameter);
        }
    
        public virtual int sp_Link_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Link_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Link_Insert(string name, string line1, string line2, string link1, string link2, Nullable<int> position, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var line1Parameter = line1 != null ?
                new ObjectParameter("Line1", line1) :
                new ObjectParameter("Line1", typeof(string));
    
            var line2Parameter = line2 != null ?
                new ObjectParameter("Line2", line2) :
                new ObjectParameter("Line2", typeof(string));
    
            var link1Parameter = link1 != null ?
                new ObjectParameter("Link1", link1) :
                new ObjectParameter("Link1", typeof(string));
    
            var link2Parameter = link2 != null ?
                new ObjectParameter("Link2", link2) :
                new ObjectParameter("Link2", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Link_Insert", nameParameter, line1Parameter, line2Parameter, link1Parameter, link2Parameter, positionParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_Link_Paging_Result> sp_Link_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Link_Paging_Result>("sp_Link_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Link_Update(Nullable<int> id, string name, string line1, string line2, string link1, string link2, Nullable<int> position, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var line1Parameter = line1 != null ?
                new ObjectParameter("Line1", line1) :
                new ObjectParameter("Line1", typeof(string));
    
            var line2Parameter = line2 != null ?
                new ObjectParameter("Line2", line2) :
                new ObjectParameter("Line2", typeof(string));
    
            var link1Parameter = link1 != null ?
                new ObjectParameter("Link1", link1) :
                new ObjectParameter("Link1", typeof(string));
    
            var link2Parameter = link2 != null ?
                new ObjectParameter("Link2", link2) :
                new ObjectParameter("Link2", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Link_Update", idParameter, nameParameter, line1Parameter, line2Parameter, link1Parameter, link2Parameter, positionParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual int sp_Member_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Member_GetByAll_Result> sp_Member_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_GetByAll_Result>("sp_Member_GetByAll");
        }
    
        public virtual ObjectResult<sp_Member_GetById_Result> sp_Member_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Member_GetById_Result>("sp_Member_GetById", idParameter);
        }
    
        public virtual int sp_Member_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Member_Insert(string name, string email, string username, string password, Nullable<int> groupMemberId, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var groupMemberIdParameter = groupMemberId.HasValue ?
                new ObjectParameter("GroupMemberId", groupMemberId) :
                new ObjectParameter("GroupMemberId", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Insert", nameParameter, emailParameter, usernameParameter, passwordParameter, groupMemberIdParameter, activeParameter);
        }
    
        public virtual int sp_Member_Update(Nullable<int> id, string name, string email, string username, string password, Nullable<int> groupMemberId, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var groupMemberIdParameter = groupMemberId.HasValue ?
                new ObjectParameter("GroupMemberId", groupMemberId) :
                new ObjectParameter("GroupMemberId", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Member_Update", idParameter, nameParameter, emailParameter, usernameParameter, passwordParameter, groupMemberIdParameter, activeParameter);
        }
    
        public virtual int sp_News_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_News_GetByAll_Result> sp_News_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetByAll_Result>("sp_News_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_News_GetById_Result> sp_News_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetById_Result>("sp_News_GetById", idParameter);
        }
    
        public virtual int sp_News_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_News_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string where)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Paging", curentPageParameter, pageSizeParameter, whereParameter);
        }
    
        public virtual int sp_Page_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Page_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Page_GetByAll_Result> sp_Page_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Page_GetByAll_Result>("sp_Page_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Page_GetById_Result> sp_Page_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Page_GetById_Result>("sp_Page_GetById", idParameter);
        }
    
        public virtual ObjectResult<sp_Page_GetByLevel_Result> sp_Page_GetByLevel(string level, string lang, Nullable<int> levelLength)
        {
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var levelLengthParameter = levelLength.HasValue ?
                new ObjectParameter("LevelLength", levelLength) :
                new ObjectParameter("LevelLength", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Page_GetByLevel_Result>("sp_Page_GetByLevel", levelParameter, langParameter, levelLengthParameter);
        }
    
        public virtual int sp_Page_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Page_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Page_Insert(string name, string tag, string content, string detail, string level, string title, string description, string keyword, Nullable<int> type, string link, string target, Nullable<int> position, Nullable<int> index, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Page_Insert", nameParameter, tagParameter, contentParameter, detailParameter, levelParameter, titleParameter, descriptionParameter, keywordParameter, typeParameter, linkParameter, targetParameter, positionParameter, indexParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_Page_Paging_Result> sp_Page_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Page_Paging_Result>("sp_Page_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Page_Update(Nullable<int> id, string name, string tag, string content, string detail, string level, string title, string description, string keyword, Nullable<int> type, string link, string target, Nullable<int> position, Nullable<int> index, Nullable<int> ord, Nullable<int> active, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(int));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("index", index) :
                new ObjectParameter("index", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Page_Update", idParameter, nameParameter, tagParameter, contentParameter, detailParameter, levelParameter, titleParameter, descriptionParameter, keywordParameter, typeParameter, linkParameter, targetParameter, positionParameter, indexParameter, ordParameter, activeParameter, langParameter);
        }
    
        public virtual int sp_ProColor_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProColor_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_ProColor_GetByAll_Result> sp_ProColor_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProColor_GetByAll_Result>("sp_ProColor_GetByAll");
        }
    
        public virtual ObjectResult<sp_ProColor_GetById_Result> sp_ProColor_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProColor_GetById_Result>("sp_ProColor_GetById", idParameter);
        }
    
        public virtual int sp_ProColor_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProColor_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ProColor_Insert(Nullable<int> proId, Nullable<int> colorId)
        {
            var proIdParameter = proId.HasValue ?
                new ObjectParameter("ProId", proId) :
                new ObjectParameter("ProId", typeof(int));
    
            var colorIdParameter = colorId.HasValue ?
                new ObjectParameter("ColorId", colorId) :
                new ObjectParameter("ColorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProColor_Insert", proIdParameter, colorIdParameter);
        }
    
        public virtual ObjectResult<sp_ProColor_Paging_Result> sp_ProColor_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProColor_Paging_Result>("sp_ProColor_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_ProColor_Update(Nullable<int> id, Nullable<int> proId, Nullable<int> colorId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var proIdParameter = proId.HasValue ?
                new ObjectParameter("ProId", proId) :
                new ObjectParameter("ProId", typeof(int));
    
            var colorIdParameter = colorId.HasValue ?
                new ObjectParameter("ColorId", colorId) :
                new ObjectParameter("ColorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProColor_Update", idParameter, proIdParameter, colorIdParameter);
        }
    
        public virtual int sp_Product_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Product_GetByAll_Result> sp_Product_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetByAll_Result>("sp_Product_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Product_GetByCatelogy_Result> sp_Product_GetByCatelogy(Nullable<int> catId)
        {
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetByCatelogy_Result>("sp_Product_GetByCatelogy", catIdParameter);
        }
    
        public virtual ObjectResult<sp_Product_GetById_Result> sp_Product_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetById_Result>("sp_Product_GetById", idParameter);
        }
    
        public virtual int sp_Product_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Product_Insert(string tag, string name, string content, string detail, Nullable<short> priority, Nullable<short> index, Nullable<double> price, string image, Nullable<System.DateTime> date, Nullable<int> catId, string catTag, string title, string description, string keyword, Nullable<int> active, Nullable<int> ord, string lang, Nullable<int> brandId, string piceOld, string image1, string image2, string image3, string image4, string image5, string codepro, Nullable<int> count, Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd)
        {
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(short));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(short));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(int));
    
            var catTagParameter = catTag != null ?
                new ObjectParameter("CatTag", catTag) :
                new ObjectParameter("CatTag", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var piceOldParameter = piceOld != null ?
                new ObjectParameter("PiceOld", piceOld) :
                new ObjectParameter("PiceOld", typeof(string));
    
            var image1Parameter = image1 != null ?
                new ObjectParameter("Image1", image1) :
                new ObjectParameter("Image1", typeof(string));
    
            var image2Parameter = image2 != null ?
                new ObjectParameter("Image2", image2) :
                new ObjectParameter("Image2", typeof(string));
    
            var image3Parameter = image3 != null ?
                new ObjectParameter("Image3", image3) :
                new ObjectParameter("Image3", typeof(string));
    
            var image4Parameter = image4 != null ?
                new ObjectParameter("Image4", image4) :
                new ObjectParameter("Image4", typeof(string));
    
            var image5Parameter = image5 != null ?
                new ObjectParameter("Image5", image5) :
                new ObjectParameter("Image5", typeof(string));
    
            var codeproParameter = codepro != null ?
                new ObjectParameter("Codepro", codepro) :
                new ObjectParameter("Codepro", typeof(string));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("DateBegin", dateBegin) :
                new ObjectParameter("DateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Insert", tagParameter, nameParameter, contentParameter, detailParameter, priorityParameter, indexParameter, priceParameter, imageParameter, dateParameter, catIdParameter, catTagParameter, titleParameter, descriptionParameter, keywordParameter, activeParameter, ordParameter, langParameter, brandIdParameter, piceOldParameter, image1Parameter, image2Parameter, image3Parameter, image4Parameter, image5Parameter, codeproParameter, countParameter, dateBeginParameter, dateEndParameter);
        }
    
        public virtual int sp_Product_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string where, string order)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Paging", curentPageParameter, pageSizeParameter, whereParameter, orderParameter);
        }
    
        public virtual ObjectResult<sp_Product_Paging1_Result> sp_Product_Paging1(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_Paging1_Result>("sp_Product_Paging1", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Product_Update(Nullable<int> id, string tag, string name, string content, string detail, Nullable<short> priority, Nullable<short> index, Nullable<double> price, string image, Nullable<System.DateTime> date, Nullable<int> catId, string catTag, string title, string description, string keyword, Nullable<int> active, Nullable<int> ord, string lang, Nullable<int> brandId, string piceOld, string image1, string image2, string image3, string image4, string image5, string codepro, Nullable<int> count, Nullable<System.DateTime> dateBegin, Nullable<System.DateTime> dateEnd)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var tagParameter = tag != null ?
                new ObjectParameter("Tag", tag) :
                new ObjectParameter("Tag", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(short));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(short));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(double));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var catIdParameter = catId.HasValue ?
                new ObjectParameter("CatId", catId) :
                new ObjectParameter("CatId", typeof(int));
    
            var catTagParameter = catTag != null ?
                new ObjectParameter("CatTag", catTag) :
                new ObjectParameter("CatTag", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var brandIdParameter = brandId.HasValue ?
                new ObjectParameter("BrandId", brandId) :
                new ObjectParameter("BrandId", typeof(int));
    
            var piceOldParameter = piceOld != null ?
                new ObjectParameter("PiceOld", piceOld) :
                new ObjectParameter("PiceOld", typeof(string));
    
            var image1Parameter = image1 != null ?
                new ObjectParameter("Image1", image1) :
                new ObjectParameter("Image1", typeof(string));
    
            var image2Parameter = image2 != null ?
                new ObjectParameter("Image2", image2) :
                new ObjectParameter("Image2", typeof(string));
    
            var image3Parameter = image3 != null ?
                new ObjectParameter("Image3", image3) :
                new ObjectParameter("Image3", typeof(string));
    
            var image4Parameter = image4 != null ?
                new ObjectParameter("Image4", image4) :
                new ObjectParameter("Image4", typeof(string));
    
            var image5Parameter = image5 != null ?
                new ObjectParameter("Image5", image5) :
                new ObjectParameter("Image5", typeof(string));
    
            var codeproParameter = codepro != null ?
                new ObjectParameter("Codepro", codepro) :
                new ObjectParameter("Codepro", typeof(string));
    
            var countParameter = count.HasValue ?
                new ObjectParameter("Count", count) :
                new ObjectParameter("Count", typeof(int));
    
            var dateBeginParameter = dateBegin.HasValue ?
                new ObjectParameter("DateBegin", dateBegin) :
                new ObjectParameter("DateBegin", typeof(System.DateTime));
    
            var dateEndParameter = dateEnd.HasValue ?
                new ObjectParameter("DateEnd", dateEnd) :
                new ObjectParameter("DateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Update", idParameter, tagParameter, nameParameter, contentParameter, detailParameter, priorityParameter, indexParameter, priceParameter, imageParameter, dateParameter, catIdParameter, catTagParameter, titleParameter, descriptionParameter, keywordParameter, activeParameter, ordParameter, langParameter, brandIdParameter, piceOldParameter, image1Parameter, image2Parameter, image3Parameter, image4Parameter, image5Parameter, codeproParameter, countParameter, dateBeginParameter, dateEndParameter);
        }
    
        public virtual int sp_ProSize_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProSize_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_ProSize_GetByAll_Result> sp_ProSize_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProSize_GetByAll_Result>("sp_ProSize_GetByAll");
        }
    
        public virtual ObjectResult<sp_ProSize_GetById_Result> sp_ProSize_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProSize_GetById_Result>("sp_ProSize_GetById", idParameter);
        }
    
        public virtual int sp_ProSize_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProSize_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_ProSize_Insert(Nullable<int> proId, Nullable<int> sizeId)
        {
            var proIdParameter = proId.HasValue ?
                new ObjectParameter("ProId", proId) :
                new ObjectParameter("ProId", typeof(int));
    
            var sizeIdParameter = sizeId.HasValue ?
                new ObjectParameter("SizeId", sizeId) :
                new ObjectParameter("SizeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProSize_Insert", proIdParameter, sizeIdParameter);
        }
    
        public virtual ObjectResult<sp_ProSize_Paging_Result> sp_ProSize_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ProSize_Paging_Result>("sp_ProSize_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_ProSize_Update(Nullable<int> id, Nullable<int> proId, Nullable<int> sizeId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var proIdParameter = proId.HasValue ?
                new ObjectParameter("ProId", proId) :
                new ObjectParameter("ProId", typeof(int));
    
            var sizeIdParameter = sizeId.HasValue ?
                new ObjectParameter("SizeId", sizeId) :
                new ObjectParameter("SizeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ProSize_Update", idParameter, proIdParameter, sizeIdParameter);
        }
    
        public virtual int sp_Province_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Province_GetByAll_Result> sp_Province_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Province_GetByAll_Result>("sp_Province_GetByAll");
        }
    
        public virtual ObjectResult<sp_Province_GetById_Result> sp_Province_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Province_GetById_Result>("sp_Province_GetById", idParameter);
        }
    
        public virtual int sp_Province_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Province_Insert(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_Insert", nameParameter);
        }
    
        public virtual ObjectResult<sp_Province_Paging_Result> sp_Province_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Province_Paging_Result>("sp_Province_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Province_Update(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Province_Update", idParameter, nameParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_Shop_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Shop_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Shop_GetByAddress_Result> sp_Shop_GetByAddress(string address)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Shop_GetByAddress_Result>("sp_Shop_GetByAddress", addressParameter);
        }
    
        public virtual ObjectResult<sp_Shop_GetByAll_Result> sp_Shop_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Shop_GetByAll_Result>("sp_Shop_GetByAll");
        }
    
        public virtual ObjectResult<sp_Shop_GetById_Result> sp_Shop_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Shop_GetById_Result>("sp_Shop_GetById", idParameter);
        }
    
        public virtual int sp_Shop_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Shop_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Shop_Insert(string name, Nullable<int> companyId, string address, string phoneNumber)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Shop_Insert", nameParameter, companyIdParameter, addressParameter, phoneNumberParameter);
        }
    
        public virtual ObjectResult<sp_Shop_Paging_Result> sp_Shop_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Shop_Paging_Result>("sp_Shop_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_Shop_Update(Nullable<int> id, string name, Nullable<int> companyId, string address, string phoneNumber)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyIdParameter = companyId.HasValue ?
                new ObjectParameter("CompanyId", companyId) :
                new ObjectParameter("CompanyId", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Shop_Update", idParameter, nameParameter, companyIdParameter, addressParameter, phoneNumberParameter);
        }
    
        public virtual int sp_Sizes_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sizes_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Sizes_GetByAll_Result> sp_Sizes_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Sizes_GetByAll_Result>("sp_Sizes_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Sizes_GetById_Result> sp_Sizes_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Sizes_GetById_Result>("sp_Sizes_GetById", idParameter);
        }
    
        public virtual int sp_Sizes_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sizes_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Sizes_Insert(string name, string des, string lang)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("Des", des) :
                new ObjectParameter("Des", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sizes_Insert", nameParameter, desParameter, langParameter);
        }
    
        public virtual ObjectResult<sp_Sizes_Paging_Result> sp_Sizes_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Sizes_Paging_Result>("sp_Sizes_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_Sizes_Update(Nullable<int> id, string name, string des, string lang)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var desParameter = des != null ?
                new ObjectParameter("Des", des) :
                new ObjectParameter("Des", typeof(string));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Sizes_Update", idParameter, nameParameter, desParameter, langParameter);
        }
    
        public virtual int sp_Support_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Support_GetByAll_Result> sp_Support_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Support_GetByAll_Result>("sp_Support_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_Support_GetById_Result> sp_Support_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Support_GetById_Result>("sp_Support_GetById", idParameter);
        }
    
        public virtual int sp_Support_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Support_Insert(string name, string tel, Nullable<int> type, string nick, Nullable<int> ord, Nullable<int> active, Nullable<int> groupSupportId, string lang, Nullable<int> location)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var nickParameter = nick != null ?
                new ObjectParameter("Nick", nick) :
                new ObjectParameter("Nick", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var groupSupportIdParameter = groupSupportId.HasValue ?
                new ObjectParameter("GroupSupportId", groupSupportId) :
                new ObjectParameter("GroupSupportId", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_Insert", nameParameter, telParameter, typeParameter, nickParameter, ordParameter, activeParameter, groupSupportIdParameter, langParameter, locationParameter);
        }
    
        public virtual int sp_Support_Update(Nullable<int> id, string name, string tel, Nullable<int> type, string nick, Nullable<int> ord, Nullable<int> active, Nullable<int> groupSupportId, string lang, Nullable<int> location)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var nickParameter = nick != null ?
                new ObjectParameter("Nick", nick) :
                new ObjectParameter("Nick", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var groupSupportIdParameter = groupSupportId.HasValue ?
                new ObjectParameter("GroupSupportId", groupSupportId) :
                new ObjectParameter("GroupSupportId", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            var locationParameter = location.HasValue ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_Update", idParameter, nameParameter, telParameter, typeParameter, nickParameter, ordParameter, activeParameter, groupSupportIdParameter, langParameter, locationParameter);
        }
    
        public virtual int sp_tbBill_customers_Delete(Nullable<int> billid)
        {
            var billidParameter = billid.HasValue ?
                new ObjectParameter("billid", billid) :
                new ObjectParameter("billid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbBill_customers_Delete", billidParameter);
        }
    
        public virtual ObjectResult<sp_tbBill_customers_GetByAll_Result> sp_tbBill_customers_GetByAll(string lang)
        {
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbBill_customers_GetByAll_Result>("sp_tbBill_customers_GetByAll", langParameter);
        }
    
        public virtual ObjectResult<sp_tbBill_customers_GetById_Result> sp_tbBill_customers_GetById(Nullable<int> billid)
        {
            var billidParameter = billid.HasValue ?
                new ObjectParameter("billid", billid) :
                new ObjectParameter("billid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbBill_customers_GetById_Result>("sp_tbBill_customers_GetById", billidParameter);
        }
    
        public virtual int sp_tbBill_customers_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbBill_customers_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_tbBill_customers_Insert(Nullable<int> userid, string totalmoney, Nullable<System.DateTime> idate, Nullable<System.DateTime> xdate, string request, string typepay, Nullable<int> state, string lang, Nullable<int> show)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var totalmoneyParameter = totalmoney != null ?
                new ObjectParameter("totalmoney", totalmoney) :
                new ObjectParameter("totalmoney", typeof(string));
    
            var idateParameter = idate.HasValue ?
                new ObjectParameter("idate", idate) :
                new ObjectParameter("idate", typeof(System.DateTime));
    
            var xdateParameter = xdate.HasValue ?
                new ObjectParameter("xdate", xdate) :
                new ObjectParameter("xdate", typeof(System.DateTime));
    
            var requestParameter = request != null ?
                new ObjectParameter("request", request) :
                new ObjectParameter("request", typeof(string));
    
            var typepayParameter = typepay != null ?
                new ObjectParameter("typepay", typepay) :
                new ObjectParameter("typepay", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("lang", lang) :
                new ObjectParameter("lang", typeof(string));
    
            var showParameter = show.HasValue ?
                new ObjectParameter("show", show) :
                new ObjectParameter("show", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbBill_customers_Insert", useridParameter, totalmoneyParameter, idateParameter, xdateParameter, requestParameter, typepayParameter, stateParameter, langParameter, showParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_tbBill_customers_Insert_GetID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_tbBill_customers_Insert_GetID");
        }
    
        public virtual ObjectResult<sp_tbBill_customers_Paging_Result> sp_tbBill_customers_Paging(Nullable<int> curentPage, Nullable<int> pageSize, string lang)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("Lang", lang) :
                new ObjectParameter("Lang", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbBill_customers_Paging_Result>("sp_tbBill_customers_Paging", curentPageParameter, pageSizeParameter, langParameter);
        }
    
        public virtual int sp_tbBill_customers_Update(Nullable<int> billid, Nullable<int> userid, string totalmoney, Nullable<System.DateTime> idate, Nullable<System.DateTime> xdate, string request, string typepay, Nullable<int> state, string lang, Nullable<int> show)
        {
            var billidParameter = billid.HasValue ?
                new ObjectParameter("billid", billid) :
                new ObjectParameter("billid", typeof(int));
    
            var useridParameter = userid.HasValue ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(int));
    
            var totalmoneyParameter = totalmoney != null ?
                new ObjectParameter("totalmoney", totalmoney) :
                new ObjectParameter("totalmoney", typeof(string));
    
            var idateParameter = idate.HasValue ?
                new ObjectParameter("idate", idate) :
                new ObjectParameter("idate", typeof(System.DateTime));
    
            var xdateParameter = xdate.HasValue ?
                new ObjectParameter("xdate", xdate) :
                new ObjectParameter("xdate", typeof(System.DateTime));
    
            var requestParameter = request != null ?
                new ObjectParameter("request", request) :
                new ObjectParameter("request", typeof(string));
    
            var typepayParameter = typepay != null ?
                new ObjectParameter("typepay", typepay) :
                new ObjectParameter("typepay", typeof(string));
    
            var stateParameter = state.HasValue ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(int));
    
            var langParameter = lang != null ?
                new ObjectParameter("lang", lang) :
                new ObjectParameter("lang", typeof(string));
    
            var showParameter = show.HasValue ?
                new ObjectParameter("show", show) :
                new ObjectParameter("show", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbBill_customers_Update", billidParameter, useridParameter, totalmoneyParameter, idateParameter, xdateParameter, requestParameter, typepayParameter, stateParameter, langParameter, showParameter);
        }
    
        public virtual int sp_tbBilldetail_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbBilldetail_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_tbBilldetail_GetByAll_Result> sp_tbBilldetail_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbBilldetail_GetByAll_Result>("sp_tbBilldetail_GetByAll");
        }
    
        public virtual ObjectResult<sp_tbBilldetail_GetById_Result> sp_tbBilldetail_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbBilldetail_GetById_Result>("sp_tbBilldetail_GetById", idParameter);
        }
    
        public virtual int sp_tbBilldetail_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbBilldetail_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_tbBilldetail_Insert(Nullable<int> bilid, Nullable<int> proid, Nullable<int> sizeid, Nullable<int> colorid, Nullable<int> quantity, string bilprice, string bilpricevnd, string bilmoney, Nullable<int> billlocation, Nullable<int> status)
        {
            var bilidParameter = bilid.HasValue ?
                new ObjectParameter("bilid", bilid) :
                new ObjectParameter("bilid", typeof(int));
    
            var proidParameter = proid.HasValue ?
                new ObjectParameter("proid", proid) :
                new ObjectParameter("proid", typeof(int));
    
            var sizeidParameter = sizeid.HasValue ?
                new ObjectParameter("sizeid", sizeid) :
                new ObjectParameter("sizeid", typeof(int));
    
            var coloridParameter = colorid.HasValue ?
                new ObjectParameter("colorid", colorid) :
                new ObjectParameter("colorid", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var bilpriceParameter = bilprice != null ?
                new ObjectParameter("bilprice", bilprice) :
                new ObjectParameter("bilprice", typeof(string));
    
            var bilpricevndParameter = bilpricevnd != null ?
                new ObjectParameter("bilpricevnd", bilpricevnd) :
                new ObjectParameter("bilpricevnd", typeof(string));
    
            var bilmoneyParameter = bilmoney != null ?
                new ObjectParameter("bilmoney", bilmoney) :
                new ObjectParameter("bilmoney", typeof(string));
    
            var billlocationParameter = billlocation.HasValue ?
                new ObjectParameter("billlocation", billlocation) :
                new ObjectParameter("billlocation", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("status", status) :
                new ObjectParameter("status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbBilldetail_Insert", bilidParameter, proidParameter, sizeidParameter, coloridParameter, quantityParameter, bilpriceParameter, bilpricevndParameter, bilmoneyParameter, billlocationParameter, statusParameter);
        }
    
        public virtual ObjectResult<sp_tbBilldetail_Paging_Result> sp_tbBilldetail_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbBilldetail_Paging_Result>("sp_tbBilldetail_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_tbBilldetail_Update(Nullable<int> id, Nullable<int> bilid, Nullable<int> proid, Nullable<int> sizeid, Nullable<int> colorid, Nullable<int> quantity, string bilprice, string bilpricevnd, string bilmoney, Nullable<int> billlocation)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var bilidParameter = bilid.HasValue ?
                new ObjectParameter("bilid", bilid) :
                new ObjectParameter("bilid", typeof(int));
    
            var proidParameter = proid.HasValue ?
                new ObjectParameter("proid", proid) :
                new ObjectParameter("proid", typeof(int));
    
            var sizeidParameter = sizeid.HasValue ?
                new ObjectParameter("sizeid", sizeid) :
                new ObjectParameter("sizeid", typeof(int));
    
            var coloridParameter = colorid.HasValue ?
                new ObjectParameter("colorid", colorid) :
                new ObjectParameter("colorid", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("quantity", quantity) :
                new ObjectParameter("quantity", typeof(int));
    
            var bilpriceParameter = bilprice != null ?
                new ObjectParameter("bilprice", bilprice) :
                new ObjectParameter("bilprice", typeof(string));
    
            var bilpricevndParameter = bilpricevnd != null ?
                new ObjectParameter("bilpricevnd", bilpricevnd) :
                new ObjectParameter("bilpricevnd", typeof(string));
    
            var bilmoneyParameter = bilmoney != null ?
                new ObjectParameter("bilmoney", bilmoney) :
                new ObjectParameter("bilmoney", typeof(string));
    
            var billlocationParameter = billlocation.HasValue ?
                new ObjectParameter("billlocation", billlocation) :
                new ObjectParameter("billlocation", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbBilldetail_Update", idParameter, bilidParameter, proidParameter, sizeidParameter, coloridParameter, quantityParameter, bilpriceParameter, bilpricevndParameter, bilmoneyParameter, billlocationParameter);
        }
    
        public virtual int sp_tbCUSTOMERS_Delete(Nullable<int> iusid)
        {
            var iusidParameter = iusid.HasValue ?
                new ObjectParameter("iusid", iusid) :
                new ObjectParameter("iusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbCUSTOMERS_Delete", iusidParameter);
        }
    
        public virtual ObjectResult<sp_tbCUSTOMERS_GetByAll_Result> sp_tbCUSTOMERS_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbCUSTOMERS_GetByAll_Result>("sp_tbCUSTOMERS_GetByAll");
        }
    
        public virtual ObjectResult<sp_tbCUSTOMERS_GetById_Result> sp_tbCUSTOMERS_GetById(Nullable<int> iusid)
        {
            var iusidParameter = iusid.HasValue ?
                new ObjectParameter("iusid", iusid) :
                new ObjectParameter("iusid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbCUSTOMERS_GetById_Result>("sp_tbCUSTOMERS_GetById", iusidParameter);
        }
    
        public virtual int sp_tbCUSTOMERS_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbCUSTOMERS_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_tbCUSTOMERS_Insert(string vusername, string vpassword, string vcusname, string dbirthday, string vprovince, string vaddress, string vphone, string vmobile, string vemail, Nullable<System.DateTime> dcreatedate, Nullable<short> istatus)
        {
            var vusernameParameter = vusername != null ?
                new ObjectParameter("vusername", vusername) :
                new ObjectParameter("vusername", typeof(string));
    
            var vpasswordParameter = vpassword != null ?
                new ObjectParameter("vpassword", vpassword) :
                new ObjectParameter("vpassword", typeof(string));
    
            var vcusnameParameter = vcusname != null ?
                new ObjectParameter("vcusname", vcusname) :
                new ObjectParameter("vcusname", typeof(string));
    
            var dbirthdayParameter = dbirthday != null ?
                new ObjectParameter("dbirthday", dbirthday) :
                new ObjectParameter("dbirthday", typeof(string));
    
            var vprovinceParameter = vprovince != null ?
                new ObjectParameter("vprovince", vprovince) :
                new ObjectParameter("vprovince", typeof(string));
    
            var vaddressParameter = vaddress != null ?
                new ObjectParameter("vaddress", vaddress) :
                new ObjectParameter("vaddress", typeof(string));
    
            var vphoneParameter = vphone != null ?
                new ObjectParameter("vphone", vphone) :
                new ObjectParameter("vphone", typeof(string));
    
            var vmobileParameter = vmobile != null ?
                new ObjectParameter("vmobile", vmobile) :
                new ObjectParameter("vmobile", typeof(string));
    
            var vemailParameter = vemail != null ?
                new ObjectParameter("vemail", vemail) :
                new ObjectParameter("vemail", typeof(string));
    
            var dcreatedateParameter = dcreatedate.HasValue ?
                new ObjectParameter("dcreatedate", dcreatedate) :
                new ObjectParameter("dcreatedate", typeof(System.DateTime));
    
            var istatusParameter = istatus.HasValue ?
                new ObjectParameter("istatus", istatus) :
                new ObjectParameter("istatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbCUSTOMERS_Insert", vusernameParameter, vpasswordParameter, vcusnameParameter, dbirthdayParameter, vprovinceParameter, vaddressParameter, vphoneParameter, vmobileParameter, vemailParameter, dcreatedateParameter, istatusParameter);
        }
    
        public virtual ObjectResult<sp_tbCUSTOMERS_Paging_Result> sp_tbCUSTOMERS_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbCUSTOMERS_Paging_Result>("sp_tbCUSTOMERS_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_tbCUSTOMERS_Update(Nullable<int> iusid, string vusername, string vpassword, string vcusname, string dbirthday, string vprovince, string vaddress, string vphone, string vmobile, string vemail, Nullable<System.DateTime> dcreatedate, Nullable<short> istatus)
        {
            var iusidParameter = iusid.HasValue ?
                new ObjectParameter("iusid", iusid) :
                new ObjectParameter("iusid", typeof(int));
    
            var vusernameParameter = vusername != null ?
                new ObjectParameter("vusername", vusername) :
                new ObjectParameter("vusername", typeof(string));
    
            var vpasswordParameter = vpassword != null ?
                new ObjectParameter("vpassword", vpassword) :
                new ObjectParameter("vpassword", typeof(string));
    
            var vcusnameParameter = vcusname != null ?
                new ObjectParameter("vcusname", vcusname) :
                new ObjectParameter("vcusname", typeof(string));
    
            var dbirthdayParameter = dbirthday != null ?
                new ObjectParameter("dbirthday", dbirthday) :
                new ObjectParameter("dbirthday", typeof(string));
    
            var vprovinceParameter = vprovince != null ?
                new ObjectParameter("vprovince", vprovince) :
                new ObjectParameter("vprovince", typeof(string));
    
            var vaddressParameter = vaddress != null ?
                new ObjectParameter("vaddress", vaddress) :
                new ObjectParameter("vaddress", typeof(string));
    
            var vphoneParameter = vphone != null ?
                new ObjectParameter("vphone", vphone) :
                new ObjectParameter("vphone", typeof(string));
    
            var vmobileParameter = vmobile != null ?
                new ObjectParameter("vmobile", vmobile) :
                new ObjectParameter("vmobile", typeof(string));
    
            var vemailParameter = vemail != null ?
                new ObjectParameter("vemail", vemail) :
                new ObjectParameter("vemail", typeof(string));
    
            var dcreatedateParameter = dcreatedate.HasValue ?
                new ObjectParameter("dcreatedate", dcreatedate) :
                new ObjectParameter("dcreatedate", typeof(System.DateTime));
    
            var istatusParameter = istatus.HasValue ?
                new ObjectParameter("istatus", istatus) :
                new ObjectParameter("istatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbCUSTOMERS_Update", iusidParameter, vusernameParameter, vpasswordParameter, vcusnameParameter, dbirthdayParameter, vprovinceParameter, vaddressParameter, vphoneParameter, vmobileParameter, vemailParameter, dcreatedateParameter, istatusParameter);
        }
    
        public virtual int sp_tbRecipient_Delete(Nullable<int> ireid)
        {
            var ireidParameter = ireid.HasValue ?
                new ObjectParameter("ireid", ireid) :
                new ObjectParameter("ireid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbRecipient_Delete", ireidParameter);
        }
    
        public virtual ObjectResult<sp_tbRecipient_GetByAll_Result> sp_tbRecipient_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbRecipient_GetByAll_Result>("sp_tbRecipient_GetByAll");
        }
    
        public virtual ObjectResult<sp_tbRecipient_GetById_Result> sp_tbRecipient_GetById(Nullable<int> ireid)
        {
            var ireidParameter = ireid.HasValue ?
                new ObjectParameter("ireid", ireid) :
                new ObjectParameter("ireid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbRecipient_GetById_Result>("sp_tbRecipient_GetById", ireidParameter);
        }
    
        public virtual int sp_tbRecipient_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbRecipient_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_tbRecipient_Insert(Nullable<int> iusid, string vcusname, string dbirthday, string vprovince, string vaddress, string vphone, string vmobile, string vemail, Nullable<System.DateTime> dcreatedate, Nullable<short> istatus)
        {
            var iusidParameter = iusid.HasValue ?
                new ObjectParameter("iusid", iusid) :
                new ObjectParameter("iusid", typeof(int));
    
            var vcusnameParameter = vcusname != null ?
                new ObjectParameter("vcusname", vcusname) :
                new ObjectParameter("vcusname", typeof(string));
    
            var dbirthdayParameter = dbirthday != null ?
                new ObjectParameter("dbirthday", dbirthday) :
                new ObjectParameter("dbirthday", typeof(string));
    
            var vprovinceParameter = vprovince != null ?
                new ObjectParameter("vprovince", vprovince) :
                new ObjectParameter("vprovince", typeof(string));
    
            var vaddressParameter = vaddress != null ?
                new ObjectParameter("vaddress", vaddress) :
                new ObjectParameter("vaddress", typeof(string));
    
            var vphoneParameter = vphone != null ?
                new ObjectParameter("vphone", vphone) :
                new ObjectParameter("vphone", typeof(string));
    
            var vmobileParameter = vmobile != null ?
                new ObjectParameter("vmobile", vmobile) :
                new ObjectParameter("vmobile", typeof(string));
    
            var vemailParameter = vemail != null ?
                new ObjectParameter("vemail", vemail) :
                new ObjectParameter("vemail", typeof(string));
    
            var dcreatedateParameter = dcreatedate.HasValue ?
                new ObjectParameter("dcreatedate", dcreatedate) :
                new ObjectParameter("dcreatedate", typeof(System.DateTime));
    
            var istatusParameter = istatus.HasValue ?
                new ObjectParameter("istatus", istatus) :
                new ObjectParameter("istatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbRecipient_Insert", iusidParameter, vcusnameParameter, dbirthdayParameter, vprovinceParameter, vaddressParameter, vphoneParameter, vmobileParameter, vemailParameter, dcreatedateParameter, istatusParameter);
        }
    
        public virtual ObjectResult<sp_tbRecipient_Paging_Result> sp_tbRecipient_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_tbRecipient_Paging_Result>("sp_tbRecipient_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_tbRecipient_Update(Nullable<int> ireid, Nullable<int> iusid, string vcusname, string dbirthday, string vprovince, string vaddress, string vphone, string vmobile, string vemail, Nullable<System.DateTime> dcreatedate, Nullable<short> istatus)
        {
            var ireidParameter = ireid.HasValue ?
                new ObjectParameter("ireid", ireid) :
                new ObjectParameter("ireid", typeof(int));
    
            var iusidParameter = iusid.HasValue ?
                new ObjectParameter("iusid", iusid) :
                new ObjectParameter("iusid", typeof(int));
    
            var vcusnameParameter = vcusname != null ?
                new ObjectParameter("vcusname", vcusname) :
                new ObjectParameter("vcusname", typeof(string));
    
            var dbirthdayParameter = dbirthday != null ?
                new ObjectParameter("dbirthday", dbirthday) :
                new ObjectParameter("dbirthday", typeof(string));
    
            var vprovinceParameter = vprovince != null ?
                new ObjectParameter("vprovince", vprovince) :
                new ObjectParameter("vprovince", typeof(string));
    
            var vaddressParameter = vaddress != null ?
                new ObjectParameter("vaddress", vaddress) :
                new ObjectParameter("vaddress", typeof(string));
    
            var vphoneParameter = vphone != null ?
                new ObjectParameter("vphone", vphone) :
                new ObjectParameter("vphone", typeof(string));
    
            var vmobileParameter = vmobile != null ?
                new ObjectParameter("vmobile", vmobile) :
                new ObjectParameter("vmobile", typeof(string));
    
            var vemailParameter = vemail != null ?
                new ObjectParameter("vemail", vemail) :
                new ObjectParameter("vemail", typeof(string));
    
            var dcreatedateParameter = dcreatedate.HasValue ?
                new ObjectParameter("dcreatedate", dcreatedate) :
                new ObjectParameter("dcreatedate", typeof(System.DateTime));
    
            var istatusParameter = istatus.HasValue ?
                new ObjectParameter("istatus", istatus) :
                new ObjectParameter("istatus", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_tbRecipient_Update", ireidParameter, iusidParameter, vcusnameParameter, dbirthdayParameter, vprovinceParameter, vaddressParameter, vphoneParameter, vmobileParameter, vemailParameter, dcreatedateParameter, istatusParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_User_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_User_GetByAll_Result> sp_User_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_GetByAll_Result>("sp_User_GetByAll");
        }
    
        public virtual ObjectResult<sp_User_GetById_Result> sp_User_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_GetById_Result>("sp_User_GetById", idParameter);
        }
    
        public virtual int sp_User_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_User_Insert(string name, string username, string password, string level, Nullable<int> admin, Nullable<int> ord, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var adminParameter = admin.HasValue ?
                new ObjectParameter("Admin", admin) :
                new ObjectParameter("Admin", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Insert", nameParameter, usernameParameter, passwordParameter, levelParameter, adminParameter, ordParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_User_Paging_Result> sp_User_Paging(Nullable<int> curentPage, Nullable<int> pageSize)
        {
            var curentPageParameter = curentPage.HasValue ?
                new ObjectParameter("CurentPage", curentPage) :
                new ObjectParameter("CurentPage", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_Paging_Result>("sp_User_Paging", curentPageParameter, pageSizeParameter);
        }
    
        public virtual int sp_User_Update(Nullable<int> id, string name, string username, string password, string level, Nullable<int> admin, Nullable<int> ord, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var adminParameter = admin.HasValue ?
                new ObjectParameter("Admin", admin) :
                new ObjectParameter("Admin", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Update", idParameter, nameParameter, usernameParameter, passwordParameter, levelParameter, adminParameter, ordParameter, activeParameter);
        }
    
        public virtual ObjectResult<spThongKe_Edit_Result> spThongKe_Edit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spThongKe_Edit_Result>("spThongKe_Edit");
        }
    }
}
